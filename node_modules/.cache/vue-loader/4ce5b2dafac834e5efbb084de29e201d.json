{"remainingRequest":"/Users/markokeeffe/development/vue/vue-weather/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/markokeeffe/development/vue/vue-weather/src/components/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/markokeeffe/development/vue/vue-weather/src/components/Report.vue","mtime":1579005937927},{"path":"/Users/markokeeffe/development/vue/vue-weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/markokeeffe/development/vue/vue-weather/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/markokeeffe/development/vue/vue-weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/markokeeffe/development/vue/vue-weather/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IEFQSV9LRVksIGxvY2F0aW9ucyB9IGZyb20gJy4uL2NvbnN0YW50cyc7CmltcG9ydCBTZWxlY3REcm9wZG93biBmcm9tICcuLi9jb21wb25lbnRzL1NlbGVjdERyb3Bkb3duLnZ1ZSc7CmltcG9ydCBUYWJsZUJhc2ljIGZyb20gJy4uL2NvbXBvbmVudHMvVGFibGVCYXNpYy52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSZXBvcnQnLAogIHByb3BzOiB7CiAgICB0aXRsZTogU3RyaW5nCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBTZWxlY3REcm9wZG93biwKICAgIFRhYmxlQmFzaWMKICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgd2VhdGhlcjogbnVsbCwKICAgICAgbG9jYXRpb25zLAogICAgICBsb2NhdGlvbjogJ0R1YmxpbicKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFdlYXRoZXI6IGZ1bmN0aW9uKCkgewogICAgICBheGlvcwogICAgICAgIC5nZXQoYGh0dHBzOi8vYXBpLndlYXRoZXJiaXQuaW8vdjIuMC9jdXJyZW50P2NpdHk9JHt0aGlzLmxvY2F0aW9ufSxJRSZrZXk9JHtBUElfS0VZfWApCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gKHRoaXMud2VhdGhlciA9IHRoaXMuZm9ybWF0V2VhdGhlckRhdGEocmVzcG9uc2UuZGF0YS5kYXRhKSkpCiAgICB9LAogICAgdXBkYXRlTG9jYXRpb246IGZ1bmN0aW9uKGUpIHsKICAgICAgdGhpcy5sb2NhdGlvbiA9IGU7CiAgICAgIHRoaXMuZ2V0V2VhdGhlcigpOwogICAgfSwKICAgIGZvcm1hdFdlYXRoZXJEYXRhOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgIGNvbnN0IGNvbHVtbnMgPSBbJ1N1bnJpc2UnLCAnU3Vuc2V0JywgJ0Nsb3VkcycsICdSYWluJywgJ1RlbXBlcmF0dXJlJ107CiAgICAgIGNvbnN0IHsgc3VucmlzZSwgc3Vuc2V0LCBjbG91ZHMsIHByZWNpcCwgYXBwX3RlbXAgfSA9IGRhdGFbMF07CiAgICAgIGNvbnN0IHJvd3MgPSBbIHN1bnJpc2UsIHN1bnNldCwgY2xvdWRzLCBwcmVjaXAsIGFwcF90ZW1wIF07CiAgICAgIHJldHVybiB7CiAgICAgICAgY29sdW1ucywKICAgICAgICByb3dzCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy5nZXRXZWF0aGVyKCk7CiAgfQp9Cg=="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Report.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"header\">\n      Weather Forecast\n    </div>\n    <div class=\"selection\">\n      <SelectDropdown label=\"Select a location\" v-bind:model=\"this.location\" v-on:updateLocation=\"updateLocation($event)\" v-bind:options=\"this.locations\"/>\n    </div>\n    <TableBasic v-bind:table=\"this.weather\"/>\n </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_KEY, locations } from '../constants';\nimport SelectDropdown from '../components/SelectDropdown.vue';\nimport TableBasic from '../components/TableBasic.vue';\n\nexport default {\n  name: 'Report',\n  props: {\n    title: String\n  },\n  components: {\n    SelectDropdown,\n    TableBasic\n  },\n  data () {\n    return {\n      weather: null,\n      locations,\n      location: 'Dublin'\n    }\n  },\n  methods: {\n    getWeather: function() {\n      axios\n        .get(`https://api.weatherbit.io/v2.0/current?city=${this.location},IE&key=${API_KEY}`)\n        .then(response => (this.weather = this.formatWeatherData(response.data.data)))\n    },\n    updateLocation: function(e) {\n      this.location = e;\n      this.getWeather();\n    },\n    formatWeatherData: function(data) {\n      const columns = ['Sunrise', 'Sunset', 'Clouds', 'Rain', 'Temperature'];\n      const { sunrise, sunset, clouds, precip, app_temp } = data[0];\n      const rows = [ sunrise, sunset, clouds, precip, app_temp ];\n      return {\n        columns,\n        rows\n      }\n    }\n  },\n  mounted () {\n    this.getWeather();\n  }\n}\n</script>\n\n<style scoped>\n.header{\n    background-color:aquamarine;\n    color:darkslategrey;\n    display: flex;\n    justify-content: center;\n    height: 140px;\n    align-content: center;\n    align-items: center;\n    font-size: 40px;\n    font-weight: bold;\n}\n  .selection {\n    background-color:#fff;\n    color:darkslategrey;\n    padding: 20px 0px;\n  }\n</style>\n"]}]}